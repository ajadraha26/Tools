<!DOCTYPE html>
<html lang="bn">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>PDF ‚Üî JPG Converter Tool</title>
  <meta name="description" content="Convert multiple JPG to PDF or PDF to JPG with options and Ads. Fast, free & responsive." />
  <meta name="keywords" content="JPG to PDF, PDF to JPG, bulk JPG, convert PDF, online converter" />
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://mozilla.github.io/pdf.js/build/pdf.js"></script>
</head>

<body class="bg-gray-100 font-sans text-gray-900">
  <header class="bg-white shadow p-4">
    <h1 class="text-2xl font-bold text-center">üìÑ PDF ‚Üî JPG Converter</h1>
  </header>

  <!-- AdSense Top -->
  <div class="my-4 flex justify-center">
    <ins class="adsbygoogle"
         style="display:block"
         data-ad-client="ca-pub-‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ID"
         data-ad-slot="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞SlotID1"
         data-ad-format="auto"
         data-full-width-responsive="true"></ins>
    <script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
  </div>

  <main class="max-w-3xl mx-auto bg-white p-6 rounded-lg shadow space-y-6">
    <!-- Conversion Settings -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <div>
        <label class="block text-sm font-medium">Conversion Type:</label>
        <select id="conversionType" class="mt-1 w-full border p-2 rounded">
          <option value="jpgToPdf" selected>JPG ‚Üí PDF</option>
          <option value="pdfToJpg">PDF ‚Üí JPG</option>
        </select>
      </div>
      <div>
        <label class="block text-sm font-medium">Editing Level:</label>
        <select id="qualityLevel" class="mt-1 w-full border p-2 rounded">
          <option value="low">Low</option>
          <option value="medium" selected>Medium</option>
          <option value="high">High</option>
        </select>
      </div>
      <div>
        <label class="block text-sm font-medium">Orientation:</label>
        <select id="pageOrientation" class="mt-1 w-full border p-2 rounded">
          <option value="p" selected>Portrait</option>
          <option value="l">Landscape</option>
        </select>
      </div>
      <div>
        <label class="block text-sm font-medium">Page Size:</label>
        <select id="pageSize" class="mt-1 w-full border p-2 rounded">
          <option value="a4" selected>A4</option>
          <option value="letter">Letter</option>
        </select>
      </div>
      <div>
        <label class="block text-sm font-medium">Margin (mm):</label>
        <select id="pageMargin" class="mt-1 w-full border p-2 rounded">
          <option value="0">None</option>
          <option value="10">Small</option>
          <option value="20" selected>Medium</option>
          <option value="30">Large</option>
        </select>
      </div>
      <div>
        <label class="block text-sm font-medium">Upload File(s):</label>
        <input type="file" id="fileInput" accept=".pdf,image/jpeg" multiple class="mt-1 w-full border p-2 rounded" />
      </div>
    </div>

    <div class="text-center">
      <button onclick="handleConversion()" class="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700">Convert</button>
    </div>

    <div id="output" class="mt-4"></div>
    <div id="preview" class="mt-6 grid grid-cols-1 sm:grid-cols-2 gap-4"></div>
  </main>

  <!-- AdSense Bottom -->
  <div class="my-6 flex justify-center">
    <ins class="adsbygoogle"
         style="display:block"
         data-ad-client="ca-pub-‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ID"
         data-ad-slot="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞SlotID2"
         data-ad-format="auto"
         data-full-width-responsive="true"></ins>
    <script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
  </div>

  <footer class="text-center p-4 text-gray-500">
    &copy; 2025 ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Company ‚Ä¢ All Rights Reserved.
  </footer>

  <!-- AdSense -->
  <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

  <script>
    async function handleConversion() {
      const files = [...document.getElementById('fileInput').files];
      const type = document.getElementById('conversionType').value;
      const orient = document.getElementById('pageOrientation').value;
      const size = document.getElementById('pageSize').value;
      const margin = +document.getElementById('pageMargin').value;
      const output = document.getElementById('output');
      const preview = document.getElementById('preview');
      output.innerHTML = ''; preview.innerHTML = '';

      if (files.length === 0) return alert("Upload at least one file.");

      if (type === 'jpgToPdf') {
        const { jsPDF } = window.jspdf;
        const pdf = new jsPDF({ orientation: orient, unit: 'mm', format: size });
        for (const file of files) {
          const imgData = await new Promise(r => {
            const fr = new FileReader();
            fr.onload = e => r(e.target.result);
            fr.readAsDataURL(file);
          });
          const img = new Image();
          await new Promise(res => {
            img.onload = () => {
              const pw = pdf.internal.pageSize.getWidth() - 2*margin;
              const ph = pdf.internal.pageSize.getHeight() - 2*margin;
              let w = pw, h = (img.height*pw)/img.width;
              if (h > ph) { h = ph; w = (img.width*ph)/img.height; }
              const x = (pdf.internal.pageSize.getWidth() - w)/2;
              const y = (pdf.internal.pageSize.getHeight() - h)/2;
              pdf.addImage(imgData, 'JPEG', x, y, w, h);
              if (files.indexOf(file) < files.length-1) pdf.addPage();
              res();
            };
            img.src = imgData;
          });
        }
        pdf.save('converted.pdf');
        output.innerHTML = `<p class="text-green-600">‚úÖ PDF ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá</p>`;

      } else { // PDF to JPG
        for (const file of files) {
          const array = new Uint8Array(await file.arrayBuffer());
          const pdfDoc = await pdfjsLib.getDocument({ data: array }).promise;
          for (let i=1; i<=pdfDoc.numPages; i++) {
            const page = await pdfDoc.getPage(i);
            const vp = page.getViewport({ scale: 2 });
            const cnv = document.createElement('canvas');
            cnv.width = vp.width; cnv.height = vp.height;
            await page.render({ canvasContext: cnv.getContext('2d'), viewport: vp }).promise;
            const url = cnv.toDataURL('image/jpeg');
            const imgEl = document.createElement('img');
            imgEl.src = url;
            imgEl.alt = `Page ${i}`;
            imgEl.className = "border";
            preview.appendChild(imgEl);
            const a = document.createElement('a');
            a.href = url; a.download = `${file.name.replace(/\.pdf$/,'')}_page${i}.jpg`;
            a.text = `Download Page ${i}`;
            a.className = "block text-blue-700 underline";
            preview.appendChild(a);
          }
        }
        output.innerHTML = `<p class="text-green-600">‚úÖ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü JPG ‡¶™‡ßç‡¶∞‡¶ø‡¶≠‡¶ø‡¶â ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶® ‡¶®‡¶ø‡¶ö‡ßá</p>`;
      }

      // Example backend upload
      const form = new FormData();
      files.forEach(f=>form.append('files',f));
      form.append('type', type);
      fetch('/api/upload', { method:'POST', body: form })
        .then(r=>r.json())
        .then(j=>console.log('Server response', j))
        .catch(e=>console.error(e));
    }
  </script>
</body>
</html>
