<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Universal Image Format Converter</title>
  <meta name="description" content="Convert between JPEG, PNG, GIF, BMP, TIFF, WebP, SVG and RAW formats easily with quality settings. Fast, responsive, SEO optimized."/>
  <meta name="keywords" content="image converter, PNG to JPEG, RAW to PNG, WebP converter, base64 SVG converter"/>
  <link rel="canonical" href="https://yourdomain.com/image-converter"/>
  <script type="application/ld+json">
  {
    "@context":"https://schema.org",
    "@type":"WebApplication",
    "name":"Universal Image Format Converter",
    "url":"https://yourdomain.com/image-converter",
    "applicationCategory":"Utility",
    "description":"Convert between JPG, PNG, GIF, BMP, TIFF, WebP, SVG, and RAW formats with quality options."
  }
  </script>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 font-sans text-gray-900">
  <header class="bg-white shadow p-4 text-center">
    <h1 class="text-3xl font-bold">Universal Image Format Converter</h1>
  </header>
  <!-- AdSense Top -->
  <div class="my-4 flex justify-center"><!-- Replace IDs below -->
    <ins class="adsbygoogle"
         style="display:block"
         data-ad-client="ca-pub-YOUR_ID"
         data-ad-slot="TOP_SLOT"
         data-ad-format="auto" data-full-width-responsive="true"></ins>
    <script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
  </div>

  <main class="max-w-2xl mx-auto bg-white p-6 rounded-lg shadow space-y-6">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <div>
        <label class="block text-sm font-medium">Source Files:</label>
        <input type="file" id="fileInput" accept="image/*,.cr2,.nef" multiple class="mt-1 w-full p-2 border rounded"/>
      </div>
      <div>
        <label class="block text-sm font-medium">Target Format:</label>
        <select id="targetFormat" class="mt-1 w-full border p-2 rounded">
          <option>image/jpeg</option>
          <option>image/png</option>
          <option>image/gif</option>
          <option>image/bmp</option>
          <option>image/webp</option>
          <option>image/svg+xml</option>
          <option>application/octet-stream">RAW (Preserve)</option>
        </select>
      </div>
      <div>
        <label class="block text-sm font-medium">Editing Level:</label>
        <select id="qualityLevel" class="mt-1 w-full border p-2 rounded">
          <option value="0.5">Low</option>
          <option value="0.75" selected>Medium</option>
          <option value="1">High</option>
        </select>
      </div>
      <div>
        <label class="block text-sm font-medium">Backend Upload Enabled:</label>
        <select id="uploadEnabled" class="mt-1 w-full border p-2 rounded">
          <option value="no" selected>No</option>
          <option value="yes">Yes (Upload)</option>
        </select>
      </div>
    </div>
    <div class="text-center">
      <button class="bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700" onclick="convertImages()">Convert</button>
    </div>
    <div id="output" class="grid grid-cols-1 gap-4"></div>
  </main>

  <!-- AdSense Bottom -->
  <div class="my-6 flex justify-center">
    <ins class="adsbygoogle"
         style="display:block"
         data-ad-client="ca-pub-YOUR_ID"
         data-ad-slot="BOTTOM_SLOT"
         data-ad-format="auto" data-full-width-responsive="true"></ins>
    <script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
  </div>
  <footer class="py-4 text-center text-gray-500">&copy; 2025 Your Company</footer>
  <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

  <script>
    function isRaster(mime){ return ['image/jpeg','image/png','image/webp','image/bmp'].includes(mime); }

    async function convertImages(){
      const files=[...document.getElementById('fileInput').files];
      const target=document.getElementById('targetFormat').value;
      const quality=+document.getElementById('qualityLevel').value;
      const uploadEnabled=document.getElementById('uploadEnabled').value==='yes';
      const output=document.getElementById('output');
      output.innerHTML='';

      if(!files.length) return alert('Please select files.');

      for(const f of files){
        const reader=new FileReader();
        reader.onload=async e=>{
          const dataURL=e.target.result;
          let resultBlob, downloadName;

          if(f.type.startsWith('image/') && isRaster(target)){
            const img=new Image();
            img.onload=()=>{
              const c=document.createElement('canvas');
              c.width=img.width; c.height=img.height;
              const ctx=c.getContext('2d');
              ctx.drawImage(img,0,0);
              c.toBlob(blob=>{
                resultBlob=blob;
                downloadName=f.name.replace(/\.[^/.]+$/,'.'+target.split('/')[1]);
                handleResult(c.toDataURL(target, quality), downloadName, resultBlob);
              }, target, quality);
            };
            img.src=dataURL;

          } else if(f.type==='image/svg+xml' && target==='image/svg+xml'){
            // direct pass-through
            handleResult(dataURL, f.name, new Blob([f],{type:f.type}));

          } else if(!f.type.startsWith('image/') || target.startsWith('application')){
            // RAW or unsupported conversion
            output.insertAdjacentHTML('beforeend',`<p class="text-red-600">RAW unsupported in browser for <strong>${f.name}</strong>. Sending to server for handling.</p>`);
            if(uploadEnabled){
              const fd=new FormData(); fd.append('file',f); fd.append('target',target);
              fetch('/api/convert', { method:'POST', body:fd })
              .then(r=>r.blob()).then(blob=>{
                const url=URL.createObjectURL(blob);
                const a=document.createElement('a'); a.href=url; a.download=f.name;
                a.text=`Download converted ${f.name}`; output.appendChild(a);
              });
            }
          } else {
            output.insertAdjacentHTML('beforeend',`<p class="text-red-600">Conversion not supported for ${f.name}</p>`);
          }
        };
        reader.readAsDataURL(f);
      }

      function handleResult(dataURL,name,blob){
        const div=document.createElement('div');
        div.innerHTML=`<p><strong>${name}</strong></p><img src="${dataURL}" alt="${name}" class="max-w-full border"/><a href="${dataURL}" download="${name}" class="mt-1 inline-block text-blue-700 underline">Download</a>`;
        output.appendChild(div);
        if(uploadEnabled){
          const fd=new FormData(); fd.append('file',blob, name);
          fetch('/api/convert', { method:'POST', body:fd }).then(console.log);
        }
      }
    }
  </script>
</body>
</html>
